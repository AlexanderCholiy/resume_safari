# Generated by Django 4.2.20 on 2025-05-19 13:51

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('institution', models.CharField(max_length=255, verbose_name='Учебное заведение')),
                ('degree', models.CharField(max_length=255, verbose_name='Степень')),
                ('field_of_study', models.CharField(max_length=255, verbose_name='Специальность')),
            ],
            options={
                'verbose_name': 'образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('company', models.CharField(max_length=255, verbose_name='Компания')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'опыт работы',
                'verbose_name_plural': 'Опыт работы',
            },
        ),
        migrations.CreateModel(
            name='HardSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grid_row', models.PositiveIntegerField(default=1, help_text='Номер строки в HTML-сетке для отображения этого навыка', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Строка')),
                ('grid_column', models.PositiveIntegerField(default=1, help_text='Номер колонки в HTML-сетке для отображения этого навыка', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Колонка')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'проффесиональный навык',
                'verbose_name_plural': 'Профессиональные навыки',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
                ('about_me', models.TextField(verbose_name='Обо мне')),
                ('is_published', models.BooleanField(default=True, help_text='Отметьте, если хотите опубликовать резюме', verbose_name='Опубликовано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'резюме',
                'verbose_name_plural': 'Резюме',
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'пользователь', 'verbose_name_plural': 'Пользователи'},
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AddField(
            model_name='user',
            name='git_hub_link',
            field=models.URLField(blank=True, max_length=255, null=True, unique=True, verbose_name='Ссылка на GitHub'),
        ),
        migrations.AddField(
            model_name='user',
            name='patronymic',
            field=models.CharField(default='Игоревич', max_length=150, verbose_name='Отчество'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон'),
        ),
        migrations.AddField(
            model_name='user',
            name='telegram_id',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Имя пользователя в Telegram'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.CreateModel(
            name='SoftSkillName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название навыка')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Справочник личностных навыков',
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='SoftSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grid_row', models.PositiveIntegerField(default=1, help_text='Номер строки в HTML-сетке для отображения этого навыка', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Строка')),
                ('grid_column', models.PositiveIntegerField(default=1, help_text='Номер колонки в HTML-сетке для отображения этого навыка', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Колонка')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soft_skills', to='user.softskillname', verbose_name='Личностный навык')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soft_skills', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'личностный навык',
                'verbose_name_plural': 'Личностные навыки',
            },
        ),
        migrations.CreateModel(
            name='ResumeSoftSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.resume')),
                ('soft_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.softskill')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeHardSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hard_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.hardskill')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.resume')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.experience')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.resume')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.education')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.resume')),
            ],
        ),
        migrations.AddField(
            model_name='resume',
            name='educations',
            field=models.ManyToManyField(blank=True, related_name='resumes', through='user.ResumeEducation', to='user.education', verbose_name='Образование'),
        ),
        migrations.AddField(
            model_name='resume',
            name='experiences',
            field=models.ManyToManyField(blank=True, related_name='resumes', through='user.ResumeExperience', to='user.experience', verbose_name='Опыт работы'),
        ),
        migrations.AddField(
            model_name='resume',
            name='hard_skills',
            field=models.ManyToManyField(blank=True, related_name='resumes', through='user.ResumeHardSkill', to='user.hardskill', verbose_name='Профессиональные навыки'),
        ),
        migrations.AddField(
            model_name='resume',
            name='soft_skills',
            field=models.ManyToManyField(blank=True, related_name='resumes', through='user.ResumeSoftSkill', to='user.softskill', verbose_name='Личностные навыки'),
        ),
        migrations.AddField(
            model_name='resume',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='HardSkillName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название навыка')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Справочник профессиональных навыков',
                'unique_together': {('name',)},
            },
        ),
        migrations.AddField(
            model_name='hardskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hard_skills', to='user.hardskillname', verbose_name='Профессиональный навык'),
        ),
        migrations.AddField(
            model_name='hardskill',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hard_skills', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='experience',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='education',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddConstraint(
            model_name='softskill',
            constraint=models.UniqueConstraint(fields=('user', 'skill'), name='unique_soft_skill'),
        ),
        migrations.AddConstraint(
            model_name='resumesoftskill',
            constraint=models.UniqueConstraint(fields=('resume', 'soft_skill'), name='unique_soft_skill_per_resume'),
        ),
        migrations.AddConstraint(
            model_name='resumehardskill',
            constraint=models.UniqueConstraint(fields=('resume', 'hard_skill'), name='unique_hard_skill_per_resume'),
        ),
        migrations.AddConstraint(
            model_name='resumeexperience',
            constraint=models.UniqueConstraint(fields=('resume', 'experience'), name='unique_experience_per_resume'),
        ),
        migrations.AddConstraint(
            model_name='resumeeducation',
            constraint=models.UniqueConstraint(fields=('resume', 'education'), name='unique_education_per_resume'),
        ),
        migrations.AddConstraint(
            model_name='resume',
            constraint=models.UniqueConstraint(fields=('user', 'position'), name='unique_resume'),
        ),
        migrations.AddConstraint(
            model_name='hardskill',
            constraint=models.UniqueConstraint(fields=('user', 'skill'), name='unique_hard_skill'),
        ),
        migrations.AddConstraint(
            model_name='experience',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'position'), name='unique_experience'),
        ),
        migrations.AddConstraint(
            model_name='education',
            constraint=models.UniqueConstraint(fields=('user', 'institution', 'degree', 'field_of_study'), name='unique_education'),
        ),
    ]
